---
import type { Props as BaseHeadProps } from "@root/components/BaseHead.astro";
import { extname } from "node:path";
import mime from "mime-types";

import BaseHead from "@components/BaseHead.astro";
import BaseLayout from "@components/BaseLayout";
import ArticleContent from "@components/ArticleContent";
import * as utils from "@utils/string";
import ArticlePost from "@components/ArticlePost";
import "@styles/global.scss";
import { SITE_METADATA } from "@root/config";

export interface Props extends BaseHeadProps {
	lang?: string | undefined;
	content: ArticleType;
	canonicalUrl?: string | undefined;
}

const { lang = "ru", content, canonicalUrl } = Astro.props as Props;
---

<html lang={lang}>
	<BaseHead title={content.title} description={content.description} canonicalUrl={canonicalUrl}>
		<meta property="og:title" content={content.title} />
		<meta property="og:site_name" content={SITE_METADATA.name} />
		<meta property="og:description" content={content.description} />
		<meta property="og:type" content="article" />
		<meta property="og:url" content={canonicalUrl} />
		{
		content.coverImage && (
				<meta property="og:image" content={`${Astro.url.origin}${content.coverImage}`} />
				<meta property="og:image:width" content="700" />
				<meta property="og:image:height" content="400" />
				<meta property="og:image:type" content={`${mime.lookup(extname(content.coverImage))}`} />
		)
		}
	</BaseHead>
	
	<script is:inline defer src="/assets/js/load-code-highlight.js"></script>

	<BaseLayout>
		<div class="container">
			<ArticlePost lang={lang} data={content}>
				<ArticleContent>
					<slot />
				</ArticleContent>
			</ArticlePost>
		</div>
	</BaseLayout>
</html>
