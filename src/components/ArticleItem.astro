---
import type { CollectionEntry } from "astro:content";
import { URL_BLOG_PREFIX } from "@root/pages/[...blog].astro";
import { getLanguageFromURL } from "@i18n/utils";
import { createDateFormatter, createRelativeArticleUrl } from "@root/utils";

export interface Props {
	entry: CollectionEntry<"blog">;
}

const pageLang = getLanguageFromURL(Astro.url.pathname);
const { entry } = Astro.props as Props;
const {
	id,
	data: { title, pubDate },
} = entry;
const articleLang = id.split("/")[0];
---

<article
	itemprop="blogPosts"
	itemscope
	itemtype="http://schema.org/BlogPosting"
	class="article-item"
>
	<a href={`${createRelativeArticleUrl(entry, URL_BLOG_PREFIX)}`}>
		<div class="flex">
			<h3 itemprop="headline">{title}</h3>
			{articleLang !== pageLang && <sup>{articleLang.toLocaleUpperCase()}</sup>}
		</div>
		<p>
			<time datetime={pubDate.toISOString()}>
				{createDateFormatter(pageLang).format(pubDate)}
			</time>
		</p>
	</a>
</article>

<style lang="scss">
	article {
		border-radius: var(--border-radius-md);
		text-decoration: none;
		& a {
			display: flex;
			justify-content: space-between;
			align-items: center;
			column-gap: 10px;
			color: var(--font-color);
			padding: 8px 0;
			& sup {
				margin-left: 5px;
				font-size: 0.7em;
			}
			& h3 {
				font-size: var(--font-size-md);
				font-weight: normal;
				margin: 0;
			}
			& p {
				font-size: var(--font-size-xs);
				font-family: var(--font-family-monospace);
				color: var(--font-color-gray);
				text-transform: uppercase;
				text-align: right;
				white-space: nowrap;
				margin-bottom: 0;
			}
		}
	}

	@media screen and (max-width: 560px) {
		article {
			margin-bottom: 10px;
			& a {
				flex-direction: column-reverse;
				align-items: flex-start;
				& p {
					margin-bottom: 5px;
				}
			}
		}
	}
</style>
