---
/**
 * This components is used in article layout to display links in alternative lanugages.
 */
import { DEFAULT_LANGUAGE } from "@root/config";
import { getLanguageFromURL } from "@root/utils";

export interface Props extends astroHTML.JSX.AnchorHTMLAttributes {
	lang: LanguageKeys;

	/**
	 * Custom article slug for alternate language
	 */
	slug?: string;
}

let { pathname } = Astro.url;
const siteLang = getLanguageFromURL(pathname);
const { lang, slug, ...attrs } = Astro.props as Props;

/**
 * Articles have different slug for different languages, so I have to modify it according to user's language.
 */
const mofifyArticleSlug = (slug) =>
	lang === DEFAULT_LANGUAGE
		? pathname.replace(pathname.split("/").at(4), slug)
		: pathname.replace(pathname.split("/").at(3), slug);

let href: string;

if (slug && pathname.includes("/blog/")) {
	pathname = mofifyArticleSlug(slug);
}

/* Someday I'll refactor this */
if (lang === DEFAULT_LANGUAGE) {
	href = `/${pathname.split("/").slice(2).join("/")}`;
} else {
	href = `/${lang}/`;
	if (siteLang !== DEFAULT_LANGUAGE) {
		href += `${pathname.split("/").slice(2).join("/")}`;
	} else {
		href += `${pathname.split("/").slice(1).join("/")}`;
	}
}
---

<a href={href} {...attrs}>
	<slot />
</a>
